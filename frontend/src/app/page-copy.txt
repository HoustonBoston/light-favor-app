"use client"

import { GoogleLogin } from "@react-oauth/google"
import { useRouter } from "next/navigation"

import { jwtDecode } from "jwt-decode"

import { useUser } from "@/context/UserContext"

export default function LoginPage ()
{
    const router = useRouter()
    // const [user, setUser] = useUser()

    return (
        <div className="h-screen flex justify-center items-center" id="login-info">
            <GoogleLogin onSuccess={
                credentialResponse =>
                {
                    const decoded = jwtDecode(credentialResponse.credential!)
                    console.log('decoded', decoded)
                    document.cookie = `jwtLogin=${String(decoded.email)}`  // ignore underline because email does exist. Will be used for middleware.js

                    fetch('http://localhost:3000/get_user_id',
                        {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(decoded.email)
                        }
                    ).then((response) =>
                    {
                        // set the user object state.
                        response.json().then((result) => setUser(prev =>
                        {
                            return {
                                ...prev, user_email: decoded.email,
                                user_id: result.user_id,
                                dayjobArr: prev?.dayjobArr
                            }
                        }
                        ))

                        router.push('/cabin_readiness')
                    }
                    )
                }
            }
                onError={() =>
                {
                    console.error('Login failed')
                }}
                shape="pill"
            />
        </div>
    )
}
