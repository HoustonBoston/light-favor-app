# DAYJOB AND PARTS ARE ONE-MANY

#DROP SCHEMA DAYJOB_SCHEMA;

#CREATE DATABASE DAYJOB;

USE DAYJOB;

 DROP TABLE PARTS_TYPE_MASTER;
 DROP TABLE PARTS;
 DROP TABLE DAYJOB;
 DROP TABLE DAYJOB_USER;


SELECT * FROM DAYJOB;
SELECT * FROM PARTS;

DELETE FROM PARTS WHERE PART_ID >= 0;
DELETE FROM DAYJOB WHERE DAYJOB_ID >= 0;

INSERT INTO DAYJOB_USER (DAYJOB_USER_EMAIL)
VALUES ('2@example.com')
ON DUPLICATE KEY UPDATE
    DAYJOB_USER_ID = LAST_INSERT_ID(DAYJOB_USER_ID);
SELECT LAST_INSERT_ID();

SELECT * FROM DAYJOB_USER;


-- ALTER TABLE DAYJOB 
-- MODIFY COLUMN USER_ID varchar(50); 



# USER AND DAYJOB ARE ONE TO MANY
CREATE TABLE DAYJOB_USER (
	DAYJOB_USER_ID int AUTO_INCREMENT PRIMARY KEY NOT NULL,
	DAYJOB_USER_EMAIL varchar(50) UNIQUE  # this is what will be searched by
);

# DAYJOB AND PARTS ARE ONE-MANY
CREATE TABLE DAYJOB (
    DAYJOB_ID int NOT NULL AUTO_INCREMENT,
    DAYJOB_DATE BIGINT,
    DAYJOB_SERIAL_NUMBER int,
    DAYJOB_NUMBER int,
    DAYJOB_USER_ID int,
    PRIMARY KEY (DAYJOB_ID),
    FOREIGN KEY (DAYJOB_USER_ID) REFERENCES DAYJOB_USER(DAYJOB_USER_ID)
);

# PARTS AND PARTS_TYPE_MASTER ARE ONE-ONE
CREATE TABLE PARTS (
    PART_ID int NOT NULL AUTO_INCREMENT PRIMARY KEY,
    PART_TYPE varchar(10),
    PART_NUMBER int,
    PART_SERIAL_NUMBER int,
    DAYJOB_ID int,
    FOREIGN KEY (DAYJOB_ID) REFERENCES DAYJOB(DAYJOB_ID)
);

CREATE TABLE PARTS_TYPE_MASTER (
    PART_TYPE_ID int NOT NULL AUTO_INCREMENT,
    PART_NAME varchar(10),
    PART_NUMBER int,
    PART_ID int UNIQUE,
    PRIMARY KEY (PART_TYPE_ID),
    FOREIGN KEY (PART_ID) REFERENCES PARTS(PART_ID)
);
